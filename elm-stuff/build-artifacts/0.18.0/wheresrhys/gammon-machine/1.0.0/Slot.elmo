var _wheresrhys$gammon_machine$Slot$colorStyle = function (color) {
	var _p0 = color;
	if (_p0.ctor === 'White') {
		return _elm_lang$html$Html_Attributes$style(
			{
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'background', _1: 'white'},
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'color', _1: 'black'},
					_1: {ctor: '[]'}
				}
			});
	} else {
		return _elm_lang$html$Html_Attributes$style(
			{
				ctor: '::',
				_0: {ctor: '_Tuple2', _0: 'background', _1: 'black'},
				_1: {
					ctor: '::',
					_0: {ctor: '_Tuple2', _0: 'color', _1: 'white'},
					_1: {ctor: '[]'}
				}
			});
	}
};
var _wheresrhys$gammon_machine$Slot$counters = F2(
	function (color, i) {
		return (_elm_lang$core$Native_Utils.cmp(i, 0) > 0) ? {
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$button,
				{
					ctor: '::',
					_0: _wheresrhys$gammon_machine$Slot$colorStyle(color),
					_1: {ctor: '[]'}
				},
				_elm_lang$core$Array$toList(
					A2(
						_elm_lang$core$Array$initialize,
						_elm_lang$core$Basics$abs(i),
						function (n) {
							return A2(
								_elm_lang$html$Html$span,
								{ctor: '[]'},
								{
									ctor: '::',
									_0: _elm_lang$html$Html$text('str '),
									_1: {ctor: '[]'}
								});
						}))),
			_1: {ctor: '[]'}
		} : {
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$button,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('empty column'),
					_1: {ctor: '[]'}
				}),
			_1: {ctor: '[]'}
		};
	});
var _wheresrhys$gammon_machine$Slot$toLi = F2(
	function (color, s) {
		return A2(
			_elm_lang$html$Html$li,
			{ctor: '[]'},
			A2(_wheresrhys$gammon_machine$Slot$counters, color, s));
	});
var _wheresrhys$gammon_machine$Slot$view = function (slot) {
	return A2(_wheresrhys$gammon_machine$Slot$toLi, slot.color, slot.number);
};
var _wheresrhys$gammon_machine$Slot$update = F2(
	function (msg, model) {
		return model;
	});
var _wheresrhys$gammon_machine$Slot$Slot = F3(
	function (a, b, c) {
		return {color: a, number: b, active: c};
	});
var _wheresrhys$gammon_machine$Slot$White = {ctor: 'White'};
var _wheresrhys$gammon_machine$Slot$Black = {ctor: 'Black'};
var _wheresrhys$gammon_machine$Slot$fromInteger = function (i) {
	return (_elm_lang$core$Native_Utils.cmp(i, 0) > 0) ? A3(_wheresrhys$gammon_machine$Slot$Slot, _wheresrhys$gammon_machine$Slot$White, i, false) : A3(_wheresrhys$gammon_machine$Slot$Slot, _wheresrhys$gammon_machine$Slot$Black, 0 - i, false);
};
var _wheresrhys$gammon_machine$Slot$NewFace = function (a) {
	return {ctor: 'NewFace', _0: a};
};
var _wheresrhys$gammon_machine$Slot$Roll = {ctor: 'Roll'};
