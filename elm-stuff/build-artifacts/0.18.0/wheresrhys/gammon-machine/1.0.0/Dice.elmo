var _wheresrhys$gammon_machine$Dice$removeItem = F2(
	function (maybeInt, list) {
		var _p0 = maybeInt;
		if (_p0.ctor === 'Just') {
			var _p1 = _p0._0;
			return _elm_lang$core$List$concat(
				{
					ctor: '::',
					_0: A2(
						_elm_lang$core$List$drop,
						1,
						A2(
							_elm_lang$core$List$filter,
							function (n) {
								return _elm_lang$core$Native_Utils.eq(n, _p1);
							},
							list)),
					_1: {
						ctor: '::',
						_0: A2(
							_elm_lang$core$List$filter,
							function (n) {
								return !_elm_lang$core$Native_Utils.eq(n, _p1);
							},
							list),
						_1: {ctor: '[]'}
					}
				});
		} else {
			return list;
		}
	});
var _wheresrhys$gammon_machine$Dice$removeFaces = function (faces) {
	var allFaces = _elm_lang$core$Tuple$second(faces);
	var usedFaces = _elm_lang$core$Tuple$first(faces);
	return (_elm_lang$core$Native_Utils.cmp(
		_elm_lang$core$List$length(usedFaces),
		0) > 0) ? {
		ctor: '_Tuple2',
		_0: A2(_elm_lang$core$List$drop, 1, usedFaces),
		_1: A2(
			_wheresrhys$gammon_machine$Dice$removeItem,
			_elm_lang$core$List$head(usedFaces),
			allFaces)
	} : {ctor: '_Tuple2', _0: usedFaces, _1: allFaces};
};
var _wheresrhys$gammon_machine$Dice$Model = function (a) {
	return {faces: a};
};
var _wheresrhys$gammon_machine$Dice$initialModel = _wheresrhys$gammon_machine$Dice$Model(
	{ctor: '[]'});
var _wheresrhys$gammon_machine$Dice$DiceUsed = function (a) {
	return {ctor: 'DiceUsed', _0: a};
};
var _wheresrhys$gammon_machine$Dice$face = function ($int) {
	return A2(
		_elm_lang$html$Html$button,
		{
			ctor: '::',
			_0: _elm_lang$html$Html_Events$onClick(
				_wheresrhys$gammon_machine$Dice$DiceUsed(
					{
						ctor: '::',
						_0: $int,
						_1: {ctor: '[]'}
					})),
			_1: {ctor: '[]'}
		},
		{
			ctor: '::',
			_0: _elm_lang$html$Html$text(
				_elm_lang$core$Basics$toString($int)),
			_1: {ctor: '[]'}
		});
};
var _wheresrhys$gammon_machine$Dice$NewFace = function (a) {
	return {ctor: 'NewFace', _0: a};
};
var _wheresrhys$gammon_machine$Dice$update = F2(
	function (msg, model) {
		var _p2 = msg;
		switch (_p2.ctor) {
			case 'Roll':
				return {
					ctor: '_Tuple2',
					_0: model,
					_1: A2(
						_elm_lang$core$Random$generate,
						_wheresrhys$gammon_machine$Dice$NewFace,
						A2(
							_elm_lang$core$Random$pair,
							A2(_elm_lang$core$Random$int, 1, 6),
							A2(_elm_lang$core$Random$int, 1, 6)))
				};
			case 'NewFace':
				var _p3 = _p2._0;
				if (_elm_lang$core$Native_Utils.eq(
					_elm_lang$core$Tuple$first(_p3),
					_elm_lang$core$Tuple$second(_p3))) {
					var face = _elm_lang$core$Tuple$first(_p3);
					return {
						ctor: '_Tuple2',
						_0: _wheresrhys$gammon_machine$Dice$Model(
							{
								ctor: '::',
								_0: face,
								_1: {
									ctor: '::',
									_0: face,
									_1: {
										ctor: '::',
										_0: face,
										_1: {
											ctor: '::',
											_0: face,
											_1: {ctor: '[]'}
										}
									}
								}
							}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				} else {
					return {
						ctor: '_Tuple2',
						_0: _wheresrhys$gammon_machine$Dice$Model(
							{
								ctor: '::',
								_0: _elm_lang$core$Tuple$first(_p3),
								_1: {
									ctor: '::',
									_0: _elm_lang$core$Tuple$second(_p3),
									_1: {ctor: '[]'}
								}
							}),
						_1: _elm_lang$core$Platform_Cmd$none
					};
				}
			default:
				return {
					ctor: '_Tuple2',
					_0: _wheresrhys$gammon_machine$Dice$Model(
						_elm_lang$core$Tuple$second(
							_wheresrhys$gammon_machine$Dice$removeFaces(
								{ctor: '_Tuple2', _0: _p2._0, _1: model.faces}))),
					_1: _elm_lang$core$Platform_Cmd$none
				};
		}
	});
var _wheresrhys$gammon_machine$Dice$Roll = {ctor: 'Roll'};
var _wheresrhys$gammon_machine$Dice$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$h1,
				{ctor: '[]'},
				A2(_elm_lang$core$List$map, _wheresrhys$gammon_machine$Dice$face, model.faces)),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$button,
					{
						ctor: '::',
						_0: _elm_lang$html$Html_Events$onClick(_wheresrhys$gammon_machine$Dice$Roll),
						_1: {ctor: '[]'}
					},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text('Roll'),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}
		});
};
