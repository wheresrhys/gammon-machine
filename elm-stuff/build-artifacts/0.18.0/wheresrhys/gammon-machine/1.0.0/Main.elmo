var _wheresrhys$gammon_machine$Main$subscriptions = function (model) {
	return _elm_lang$core$Platform_Sub$none;
};
var _wheresrhys$gammon_machine$Main$initialModel = {diceModel: _wheresrhys$gammon_machine$Dice$initialModel};
var _wheresrhys$gammon_machine$Main$init = {ctor: '_Tuple2', _0: _wheresrhys$gammon_machine$Main$initialModel, _1: _elm_lang$core$Platform_Cmd$none};
var _wheresrhys$gammon_machine$Main$AppModel = function (a) {
	return {diceModel: a};
};
var _wheresrhys$gammon_machine$Main$DiceMsg = function (a) {
	return {ctor: 'DiceMsg', _0: a};
};
var _wheresrhys$gammon_machine$Main$update = F2(
	function (msg, model) {
		var _p0 = msg;
		var _p1 = A2(_wheresrhys$gammon_machine$Dice$update, _p0._0, model.diceModel);
		var updatedDiceModel = _p1._0;
		var diceCmd = _p1._1;
		return {
			ctor: '_Tuple2',
			_0: _elm_lang$core$Native_Utils.update(
				model,
				{diceModel: updatedDiceModel}),
			_1: A2(_elm_lang$core$Platform_Cmd$map, _wheresrhys$gammon_machine$Main$DiceMsg, diceCmd)
		};
	});
var _wheresrhys$gammon_machine$Main$view = function (model) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$h1,
				{ctor: '[]'},
				{
					ctor: '::',
					_0: _elm_lang$html$Html$text('A backgammon game yo'),
					_1: {ctor: '[]'}
				}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$map,
					_wheresrhys$gammon_machine$Main$DiceMsg,
					_wheresrhys$gammon_machine$Dice$view(model.diceModel)),
				_1: {ctor: '[]'}
			}
		});
};
var _wheresrhys$gammon_machine$Main$main = _elm_lang$html$Html$program(
	{init: _wheresrhys$gammon_machine$Main$init, view: _wheresrhys$gammon_machine$Main$view, update: _wheresrhys$gammon_machine$Main$update, subscriptions: _wheresrhys$gammon_machine$Main$subscriptions})();
